% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Qadmixture_qp.R
\name{Qadmixture}
\alias{Qadmixture}
\title{Estimate the ancestry proportions in an admixture model with known ancestry allele freqs}
\usage{
Qadmixture(
  G,
  P,
  pinit = NULL,
  Kem = 5,
  maxit = 100,
  rtol = 1e-07,
  trace = FALSE,
  ...
)
}
\arguments{
\item{G}{genotype matrix of n by m}

\item{P}{Kxm matrix of allele freqs for K ancestry populations}

\item{pinit}{list of starting values of Q (nxK ancestry proportions).  If not provided, a k-means clustering will be used to provide an intial estimate as starting values.}

\item{Kem}{number of EM iterations within each ECME step}

\item{maxit}{maximum number of iterations}

\item{rtol}{convergence threshold for relative change of log likelihood}

\item{trace}{whether monitoring convergence}

\item{...}{additional inputs passed to kmeans() to compute the initial parameter values}
}
\value{
\describe{
  \item{Q}{  nxK matrix of ancestry proportions }
  \item{Cs}{ estimated ancestry indicators }
  \item{llk}{ sequence of computed log likelihoods over all iterations }
}
}
\description{
Given n unrelated individuals with m SNP markers, coming from K ancestry populations,
the admixture model has parameters
(1) Q, an nxK matrix of ancestry proportions for n individuals; (2) P, a Kxm matrix of ancestry population allele freq for m SNPs.
The individual sample allele freq is modeled as \eqn{\theta=PQ} and the genotypes are modeled with a Binomial distribution with probability \eqn{\theta}.
Here we assume P is given and try to estimate Q for each individual. An EM algorithm with quasi-Newton acceleration is implemented.
}
\examples{
n=100; m = 1000; K=3; P = t(sapply(1:K, function(j) runif(m)))
Q = matrix(runif(n*K), n,K); Q = Q/rowSums(Q)
tha = Q\%*\%P; G = matrix(rbinom(n*m, 2, tha), n,m)
a1 = Qadmixture(G,P, trace=TRUE)
apply(Q, 2, range); apply(a1$Q, 2, range); cor(Q, a1$Q)
table(a1$Cs, apply(Q, 1, which.max))
par(mfrow=c(1,2))
barplot(t(a1$Q), col=rainbow(K), xlab="Individual #", ylab="Ancestry", border=NA)
matplot(a1$Q, Q); abline(0,1, col=K+1, lwd=2, lty=2)
Y = apply(Q, 1, which.max)
ml = nnet::multinom(Y~a1$Q[,-1])
Yc = apply(ml$fitted, 1, which.max)
table(Y, Yc); mean(Yc!=Y)
}
\references{
X. Wu and B. Wu (2024) Radmixture: an R package for fast and robust likelihood-based estimation of admixture model for global ancestry inference. tech rep.

D.H. Alexander, J. Novembre, and K. Lange (2009) Fast model-based estimation of ancestry in unrelated individuals. Genome Research, 19:1655-1664.

H. Zhou, D.H. Alexander, and K. Lange (2011). A quasi-Newton method for accelerating the convergence of iterative optimization algorithms. Statistics and Computing, 21:261-273.
}
